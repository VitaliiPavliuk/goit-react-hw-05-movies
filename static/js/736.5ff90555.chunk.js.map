{"version":3,"file":"static/js/736.5ff90555.chunk.js","mappings":"kOAsDA,UAjDA,WACE,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAqBR,OAnBAE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAEA,IAAMG,EAAgB,mCAAG,WAAMH,GAAN,uFAErBH,GAAa,GAFQ,UAIYO,EAAAA,EAAAA,IAAmBJ,GAJ/B,OAIfK,EAJe,OAMrBV,EAAWU,GANU,gDAQrBN,EAAS,KAAMO,SARM,yBAUrBT,GAAa,GAVQ,4EAAH,sDAatBM,EAAiBH,EAfG,CAgBrB,GAAE,CAACA,KAGF,2BACGJ,IAAa,SAAC,IAAD,IACH,OAAVE,IAAkB,wDAAgCA,KAE/B,IAAnBJ,EAAQa,QACP,wBACGb,EAAQc,KAAI,SAAAC,GACX,OACE,2BACE,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,GAKnB,OAGH,sEAIP,C,+LClDKC,EAAW,gCACXC,EAAU,mCAEHC,EAAqB,mCAAG,+FAC7BC,EAAe,CACnBC,OAAQ,CACNC,QAASJ,IAHsB,SAOZK,EAAAA,EAAAA,IAAA,UAClBN,EADkB,uBAErBG,GATiC,uBAO3BI,EAP2B,EAO3BA,KAP2B,kBAY5BA,EAAKC,SAZuB,2CAAH,qDAerBC,EAAa,mCAAG,WAAMC,GAAN,kFACrBP,EAAe,CACnBC,OAAQ,CACNC,QAASJ,EACTS,MAAOA,IAJgB,SAQJJ,EAAAA,EAAAA,IAAA,UAAaN,EAAb,iBAAsCG,GARlC,uBAQnBI,EARmB,EAQnBA,KARmB,kBAUpBA,EAAKC,SAVe,2CAAH,sDAabG,EAAgB,mCAAG,WAAMxB,GAAN,kFACxBgB,EAAe,CACnBC,OAAQ,CACNC,QAASJ,IAHiB,SAOPK,EAAAA,EAAAA,IAAA,UAClBN,EADkB,kBACAb,GACrBgB,GAT4B,uBAOtBI,EAPsB,EAOtBA,KAPsB,kBAYvBA,GAZuB,2CAAH,sDAehBK,EAAe,mCAAG,WAAMzB,GAAN,kFACvBgB,EAAe,CACnBC,OAAQ,CACNC,QAASJ,IAHgB,SAONK,EAAAA,EAAAA,IAAA,UAClBN,EADkB,kBACAb,EADA,YAErBgB,GAT2B,uBAOrBI,EAPqB,EAOrBA,KAPqB,kBAYtBA,EAAKM,MAZiB,2CAAH,sDAeftB,EAAkB,mCAAG,WAAMJ,GAAN,kFAC1BgB,EAAe,CACnBC,OAAQ,CACNC,QAASJ,IAHmB,SAOTK,EAAAA,EAAAA,IAAA,UAClBN,EADkB,kBACAb,EADA,YAErBgB,GAT8B,uBAOxBI,EAPwB,EAOxBA,KAPwB,kBAYzBA,EAAKC,SAZoB,2CAAH,qD","sources":["pages/Reviews.jsx","services/api.js"],"sourcesContent":["import { Loader } from 'components/Loader/Loader';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { requestReviewsById } from 'services/api';\n\nfunction Reviews() {\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const fetchReviewsById = async movieId => {\n      try {\n        setIsLoading(true);\n\n        const fetchedReviewsById = await requestReviewsById(movieId);\n\n        setReviews(fetchedReviewsById);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchReviewsById(movieId);\n  }, [movieId]);\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {error !== null && <p>Oops, some error occured... {error}</p>}\n\n      {reviews.length !== 0 ? (\n        <ul>\n          {reviews.map(review => {\n            return (\n              <li key={review.id}>\n                <h5>Author: {review.author}</h5>\n                <p>{review.content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </div>\n  );\n}\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '442842e0e9a8a18a8e446b3595831199';\n\nexport const requestTrendingMovies = async () => {\n  const searchParams = {\n    params: {\n      api_key: API_KEY,\n    },\n  };\n\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/movie/day`,\n    searchParams\n  );\n\n  return data.results;\n};\n\nexport const requestMovies = async query => {\n  const searchParams = {\n    params: {\n      api_key: API_KEY,\n      query: query,\n    },\n  };\n\n  const { data } = await axios.get(`${BASE_URL}/search/movie`, searchParams);\n\n  return data.results;\n};\n\nexport const requestMovieById = async movieId => {\n  const searchParams = {\n    params: {\n      api_key: API_KEY,\n    },\n  };\n\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}`,\n    searchParams\n  );\n\n  return data;\n};\n\nexport const requestCastById = async movieId => {\n  const searchParams = {\n    params: {\n      api_key: API_KEY,\n    },\n  };\n\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits`,\n    searchParams\n  );\n\n  return data.cast;\n};\n\nexport const requestReviewsById = async movieId => {\n  const searchParams = {\n    params: {\n      api_key: API_KEY,\n    },\n  };\n\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews`,\n    searchParams\n  );\n\n  return data.results;\n};\n"],"names":["useState","reviews","setReviews","isLoading","setIsLoading","error","setError","movieId","useParams","useEffect","fetchReviewsById","requestReviewsById","fetchedReviewsById","message","length","map","review","author","content","id","BASE_URL","API_KEY","requestTrendingMovies","searchParams","params","api_key","axios","data","results","requestMovies","query","requestMovieById","requestCastById","cast"],"sourceRoot":""}