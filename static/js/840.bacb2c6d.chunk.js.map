{"version":3,"file":"static/js/840.bacb2c6d.chunk.js","mappings":"kRAEaA,E,OAAeC,GAAAA,IAAH,wD,SCKnBC,GAAOC,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IACZC,GAAUD,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IAsFrB,MApFA,WAAyB,IAAD,QACtB,GAA0BE,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,GAAKJ,EAAL,CAEA,IAAMK,EAAc,mCAAG,WAAML,GAAN,uFAEnBH,GAAa,GAFM,UAIYS,EAAAA,EAAAA,IAAiBN,GAJ7B,OAIbO,EAJa,OAMnBZ,EAASY,GANU,gDAQnBR,EAAS,KAAMS,SARI,yBAUnBX,GAAa,GAVM,4EAAH,sDAapBQ,EAAeL,EAfK,CAgBrB,GAAE,CAACA,IAEJ,IAAMS,EAAY,oBAAGP,EAASQ,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAE7C,OACE,2BACGf,IAAa,SAACgB,EAAA,EAAD,IACH,OAAVd,IAAkB,wDAAgCA,MAEnD,SAAC,KAAD,CAAMe,GAAIJ,EAAV,sBACA,UAACrB,EAAD,WACGM,EAAMoB,cACL,gBACEC,IAAG,yCAAoCrB,EAAMoB,aAC7CE,IAAI,MAGR,2BACGtB,EAAMuB,eACL,0BACGvB,EAAMwB,MADT,KACkBxB,EAAMuB,aAAaE,MAAM,KAAK,GADhD,OAIDzB,EAAM0B,eACL,wCAAgBC,KAAKC,MAA2B,GAArB5B,EAAM0B,cAAjC,QAGF,sCACA,uBAAI1B,EAAM6B,YAEV,mCACC7B,EAAM8B,SAAU,uBAAI9B,EAAM8B,OAAOC,KAAI,SAAAC,GAAK,gBAAOA,EAAMC,KAAb,iBAI/C,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMjB,MAAO,CAAEC,KAAI,UAAET,EAASQ,aAAX,aAAE,EAAgBC,MAAQE,GAAG,OAAhD,qBAIF,yBACE,SAAC,KAAD,CAAMH,MAAO,CAAEC,KAAI,UAAET,EAASQ,aAAX,aAAE,EAAgBC,MAAQE,GAAG,UAAhD,2BAMJ,SAAC,EAAAe,SAAD,CAAUC,UAAU,SAACjB,EAAA,EAAD,IAApB,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOkB,KAAK,OAAOC,SAAS,SAACzC,EAAD,OAC5B,SAAC,KAAD,CAAOwC,KAAK,UAAUC,SAAS,SAACvC,EAAD,aAKxC,C,+LC1FKwC,EAAW,gCACXC,EAAU,mCAEHC,EAAqB,mCAAG,+FAC7BC,EAAe,CACnBC,OAAQ,CACNC,QAASJ,IAHsB,SAOZK,EAAAA,EAAAA,IAAA,UAClBN,EADkB,uBAErBG,GATiC,uBAO3BI,EAP2B,EAO3BA,KAP2B,kBAY5BA,EAAKC,SAZuB,2CAAH,qDAerBC,EAAa,mCAAG,WAAMC,GAAN,kFACrBP,EAAe,CACnBC,OAAQ,CACNC,QAASJ,EACTS,MAAOA,IAJgB,SAQJJ,EAAAA,EAAAA,IAAA,UAAaN,EAAb,iBAAsCG,GARlC,uBAQnBI,EARmB,EAQnBA,KARmB,kBAUpBA,EAAKC,SAVe,2CAAH,sDAablC,EAAgB,mCAAG,WAAMN,GAAN,kFACxBmC,EAAe,CACnBC,OAAQ,CACNC,QAASJ,IAHiB,SAOPK,EAAAA,EAAAA,IAAA,UAClBN,EADkB,kBACAhC,GACrBmC,GAT4B,uBAOtBI,EAPsB,EAOtBA,KAPsB,kBAYvBA,GAZuB,2CAAH,sDAehBI,EAAe,mCAAG,WAAM3C,GAAN,kFACvBmC,EAAe,CACnBC,OAAQ,CACNC,QAASJ,IAHgB,SAONK,EAAAA,EAAAA,IAAA,UAClBN,EADkB,kBACAhC,EADA,YAErBmC,GAT2B,uBAOrBI,EAPqB,EAOrBA,KAPqB,kBAYtBA,EAAKK,MAZiB,2CAAH,sDAefC,EAAkB,mCAAG,WAAM7C,GAAN,kFAC1BmC,EAAe,CACnBC,OAAQ,CACNC,QAASJ,IAHmB,SAOTK,EAAAA,EAAAA,IAAA,UAClBN,EADkB,kBACAhC,EADA,YAErBmC,GAT8B,uBAOxBI,EAPwB,EAOxBA,KAPwB,kBAYzBA,EAAKC,SAZoB,2CAAH,qD","sources":["pages/MovieDetails.styled.js","pages/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieWrapper = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n","import React, { useEffect, useState, lazy, Suspense } from 'react';\nimport { useParams, Link, Routes, Route, useLocation } from 'react-router-dom';\n\nimport { requestMovieById } from 'services/api';\nimport { Loader } from 'components/Loader/Loader';\nimport { MovieWrapper } from './MovieDetails.styled';\n\nconst Cast = lazy(() => import('./Cast'));\nconst Reviews = lazy(() => import('./Reviews'));\n\nfunction MovieDetails() {\n  const [movie, setMovie] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const fetchMovieById = async movieId => {\n      try {\n        setIsLoading(true);\n\n        const fetchedMovieById = await requestMovieById(movieId);\n\n        setMovie(fetchedMovieById);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieById(movieId);\n  }, [movieId]);\n\n  const backLinkHref = location.state?.from ?? '/';\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {error !== null && <p>Oops, some error occured... {error}</p>}\n\n      <Link to={backLinkHref}>Go back</Link>\n      <MovieWrapper>\n        {movie.poster_path && (\n          <img\n            src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}\n            alt=\"\"\n          />\n        )}\n        <div>\n          {movie.release_date && (\n            <h3>\n              {movie.title} ({movie.release_date.split('-')[0]})\n            </h3>\n          )}\n          {movie.vote_average && (\n            <p>User Score: {Math.round(movie.vote_average * 10)}%</p>\n          )}\n\n          <h4>Overview</h4>\n          <p>{movie.overview}</p>\n\n          <h4>Genres</h4>\n          {movie.genres && <p>{movie.genres.map(genre => `${genre.name} `)}</p>}\n        </div>\n      </MovieWrapper>\n\n      <h5>Additional Information</h5>\n      <ul>\n        <li>\n          <Link state={{ from: location.state?.from }} to=\"cast\">\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link state={{ from: location.state?.from }} to=\"reviews\">\n            Reviews\n          </Link>\n        </li>\n      </ul>\n\n      <Suspense fallback={<Loader />}>\n        <Routes>\n          <Route path=\"cast\" element={<Cast />} />\n          <Route path=\"reviews\" element={<Reviews />} />\n        </Routes>\n      </Suspense>\n    </div>\n  );\n}\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '442842e0e9a8a18a8e446b3595831199';\n\nexport const requestTrendingMovies = async () => {\n  const searchParams = {\n    params: {\n      api_key: API_KEY,\n    },\n  };\n\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/movie/day`,\n    searchParams\n  );\n\n  return data.results;\n};\n\nexport const requestMovies = async query => {\n  const searchParams = {\n    params: {\n      api_key: API_KEY,\n      query: query,\n    },\n  };\n\n  const { data } = await axios.get(`${BASE_URL}/search/movie`, searchParams);\n\n  return data.results;\n};\n\nexport const requestMovieById = async movieId => {\n  const searchParams = {\n    params: {\n      api_key: API_KEY,\n    },\n  };\n\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}`,\n    searchParams\n  );\n\n  return data;\n};\n\nexport const requestCastById = async movieId => {\n  const searchParams = {\n    params: {\n      api_key: API_KEY,\n    },\n  };\n\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits`,\n    searchParams\n  );\n\n  return data.cast;\n};\n\nexport const requestReviewsById = async movieId => {\n  const searchParams = {\n    params: {\n      api_key: API_KEY,\n    },\n  };\n\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews`,\n    searchParams\n  );\n\n  return data.results;\n};\n"],"names":["MovieWrapper","styled","Cast","lazy","Reviews","useState","movie","setMovie","isLoading","setIsLoading","error","setError","movieId","useParams","location","useLocation","useEffect","fetchMovieById","requestMovieById","fetchedMovieById","message","backLinkHref","state","from","Loader","to","poster_path","src","alt","release_date","title","split","vote_average","Math","round","overview","genres","map","genre","name","Suspense","fallback","path","element","BASE_URL","API_KEY","requestTrendingMovies","searchParams","params","api_key","axios","data","results","requestMovies","query","requestCastById","cast","requestReviewsById"],"sourceRoot":""}