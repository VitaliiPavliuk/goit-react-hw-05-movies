{"version":3,"file":"static/js/747.a91d061e.chunk.js","mappings":"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","sources":["components/MoviesList.jsx","components/SearchMoviesForm/SearchMoviesForm.jsx","pages/Movies.jsx","services/api.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Link, useLocation } from 'react-router-dom';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.length !== 0 &&\n        movies.map(movie => {\n          return (\n            <li key={movie.id}>\n              <Link state={{ from: location }} to={`/movies/${movie.id}`}>\n                {movie.title}\n              </Link>\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({ id: PropTypes.number.isRequired }).isRequired\n  ).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const SearchMoviesForm = ({ handleSubmit }) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <input name=\"query\" type=\"text\" placeholder=\"Search movies\" />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nSearchMoviesForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n};\n","import { Loader } from 'components/Loader/Loader';\nimport { MoviesList } from 'components/MoviesList';\nimport { SearchMoviesForm } from 'components/SearchMoviesForm/SearchMoviesForm';\nimport React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { requestMovies } from 'services/api';\n\nfunction Movies() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const queryValue = searchParams.get('query');\n\n  useEffect(() => {\n    if (!queryValue) return;\n\n    const fetchMovies = async queryValue => {\n      try {\n        setIsLoading(true);\n\n        const fetchedMovies = await requestMovies(queryValue);\n\n        setMovies(fetchedMovies);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovies(queryValue);\n  }, [queryValue]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearchParams({ query: event.currentTarget.elements.query.value });\n  };\n\n  return (\n    <div>\n      <SearchMoviesForm handleSubmit={handleSubmit} />\n\n      {isLoading && <Loader />}\n      {error !== null && <p>Oops, some error occured... {error}</p>}\n\n      <MoviesList movies={movies} />\n\n      {queryValue && movies.length === 0 && (\n        <p>There is no matching with such movie. Please enter another movie!</p>\n      )}\n    </div>\n  );\n}\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '442842e0e9a8a18a8e446b3595831199';\n\nexport const requestTrendingMovies = async () => {\n  const searchParams = {\n    params: {\n      api_key: API_KEY,\n    },\n  };\n\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/movie/day`,\n    searchParams\n  );\n\n  return data.results;\n};\n\nexport const requestMovies = async query => {\n  const searchParams = {\n    params: {\n      api_key: API_KEY,\n      query: query,\n    },\n  };\n\n  const { data } = await axios.get(`${BASE_URL}/search/movie`, searchParams);\n\n  return data.results;\n};\n\nexport const requestMovieById = async movieId => {\n  const searchParams = {\n    params: {\n      api_key: API_KEY,\n    },\n  };\n\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}`,\n    searchParams\n  );\n\n  return data;\n};\n\nexport const requestCastById = async movieId => {\n  const searchParams = {\n    params: {\n      api_key: API_KEY,\n    },\n  };\n\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits`,\n    searchParams\n  );\n\n  return data.cast;\n};\n\nexport const requestReviewsById = async movieId => {\n  const searchParams = {\n    params: {\n      api_key: API_KEY,\n    },\n  };\n\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews`,\n    searchParams\n  );\n\n  return data.results;\n};\n"],"names":["MoviesList","movies","location","useLocation","length","map","movie","state","from","to","id","title","SearchMoviesForm","handleSubmit","onSubmit","name","type","placeholder","useState","setMovies","isLoading","setIsLoading","error","setError","useSearchParams","searchParams","setSearchParams","queryValue","get","useEffect","fetchMovies","requestMovies","fetchedMovies","message","event","preventDefault","query","currentTarget","elements","value","Loader","BASE_URL","API_KEY","requestTrendingMovies","params","api_key","axios","data","results","requestMovieById","movieId","requestCastById","cast","requestReviewsById"],"sourceRoot":""}