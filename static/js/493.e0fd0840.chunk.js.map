{"version":3,"file":"static/js/493.e0fd0840.chunk.js","mappings":"2OA6DA,UAvDA,WACE,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAqBR,OAnBAE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAEA,IAAMG,EAAa,mCAAG,WAAMH,GAAN,uFAElBH,GAAa,GAFK,UAIYO,EAAAA,EAAAA,IAAgBJ,GAJ5B,OAIZK,EAJY,OAMlBV,EAAQU,GANU,gDAQlBN,EAAS,KAAMO,SARG,yBAUlBT,GAAa,GAVK,4EAAH,sDAanBM,EAAcH,EAfM,CAgBrB,GAAE,CAACA,KAGF,2BACGJ,IAAa,SAAC,IAAD,IACH,OAAVE,IAAkB,wDAAgCA,MAEnD,wBACmB,IAAhBJ,EAAKa,QACJb,EAAKc,KAAI,SAAAC,GACP,OACE,0BACGA,EAAMC,cACL,gBACEC,IAAG,yCAAoCF,EAAMC,cAC7CE,IAAKH,EAAMI,QAGb,gBAAKF,IAAKG,EAAQF,IAAI,MAGxB,uBAAIH,EAAMI,QACV,uCAAeJ,EAAMM,eAXdN,EAAMO,GAclB,QAIV,C","sources":["pages/Cast.jsx"],"sourcesContent":["import { Loader } from 'components/Loader/Loader';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { requestCastById } from 'services/api';\nimport avatar from '../img/avatar.webp';\n\nfunction Cast() {\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const fetchCastById = async movieId => {\n      try {\n        setIsLoading(true);\n\n        const fetchedCastById = await requestCastById(movieId);\n\n        setCast(fetchedCastById);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchCastById(movieId);\n  }, [movieId]);\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {error !== null && <p>Oops, some error occured... {error}</p>}\n\n      <ul>\n        {cast.length !== 0 &&\n          cast.map(actor => {\n            return (\n              <li key={actor.id}>\n                {actor.profile_path ? (\n                  <img\n                    src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`}\n                    alt={actor.name}\n                  />\n                ) : (\n                  <img src={avatar} alt=\"\" />\n                )}\n\n                <p>{actor.name}</p>\n                <p>Character: {actor.character}</p>\n              </li>\n            );\n          })}\n      </ul>\n    </div>\n  );\n}\n\nexport default Cast;\n"],"names":["useState","cast","setCast","isLoading","setIsLoading","error","setError","movieId","useParams","useEffect","fetchCastById","requestCastById","fetchedCastById","message","length","map","actor","profile_path","src","alt","name","avatar","character","id"],"sourceRoot":""}