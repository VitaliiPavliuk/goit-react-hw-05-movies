{"version":3,"file":"static/js/415.0cf00e08.chunk.js","mappings":"iOAgDA,UA3CA,WACE,OAA4CA,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,mCAAG,oGAExBJ,GAAa,GAFW,UAIYK,EAAAA,EAAAA,MAJZ,OAIlBC,EAJkB,OAMxBR,EAAkBQ,GANM,gDAQxBJ,EAAS,KAAMK,SARS,yBAUxBP,GAAa,GAVW,4EAAH,qDAazBI,GACD,GAAE,KAGD,4BACE,4CAECL,IAAa,SAAC,IAAD,IACH,OAAVE,IAAkB,wDAAgCA,MAEnD,wBAC6B,IAA1BJ,EAAeW,QACdX,EAAeY,KAAI,SAAAC,GACjB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAA3B,SAAkCF,EAAMG,SADjCH,EAAME,GAIlB,QAIV,C,+LC5CKE,EAAW,gCACXC,EAAU,mCAEHV,EAAqB,mCAAG,+FAC7BW,EAAe,CACnBC,OAAQ,CACNC,QAASH,IAHsB,SAOZI,EAAAA,EAAAA,IAAA,UAClBL,EADkB,uBAErBE,GATiC,uBAO3BI,EAP2B,EAO3BA,KAP2B,kBAY5BA,EAAKC,SAZuB,2CAAH,qDAerBC,EAAa,mCAAG,WAAMC,GAAN,kFACrBP,EAAe,CACnBC,OAAQ,CACNC,QAASH,EACTQ,MAAOA,IAJgB,SAQJJ,EAAAA,EAAAA,IAAA,UAAaL,EAAb,iBAAsCE,GARlC,uBAQnBI,EARmB,EAQnBA,KARmB,kBAUpBA,EAAKC,SAVe,2CAAH,sDAabG,EAAgB,mCAAG,WAAMC,GAAN,kFACxBT,EAAe,CACnBC,OAAQ,CACNC,QAASH,IAHiB,SAOPI,EAAAA,EAAAA,IAAA,UAClBL,EADkB,kBACAW,GACrBT,GAT4B,uBAOtBI,EAPsB,EAOtBA,KAPsB,kBAYvBA,GAZuB,2CAAH,sDAehBM,EAAe,mCAAG,WAAMD,GAAN,kFACvBT,EAAe,CACnBC,OAAQ,CACNC,QAASH,IAHgB,SAONI,EAAAA,EAAAA,IAAA,UAClBL,EADkB,kBACAW,EADA,YAErBT,GAT2B,uBAOrBI,EAPqB,EAOrBA,KAPqB,kBAYtBA,EAAKO,MAZiB,2CAAH,sDAefC,EAAkB,mCAAG,WAAMH,GAAN,kFAC1BT,EAAe,CACnBC,OAAQ,CACNC,QAASH,IAHmB,SAOTI,EAAAA,EAAAA,IAAA,UAClBL,EADkB,kBACAW,EADA,YAErBT,GAT8B,uBAOxBI,EAPwB,EAOxBA,KAPwB,kBAYzBA,EAAKC,SAZoB,2CAAH,qD","sources":["pages/Home.jsx","services/api.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { requestTrendingMovies } from 'services/api';\nimport { Link } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\n\nfunction Home() {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchTrendingMovies = async () => {\n      try {\n        setIsLoading(true);\n\n        const fetchedTrendingMovies = await requestTrendingMovies();\n\n        setTrendingMovies(fetchedTrendingMovies);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchTrendingMovies();\n  }, []);\n\n  return (\n    <div>\n      <h1>Trending today </h1>\n\n      {isLoading && <Loader />}\n      {error !== null && <p>Oops, some error occured... {error}</p>}\n\n      <ul>\n        {trendingMovies.length !== 0 &&\n          trendingMovies.map(movie => {\n            return (\n              <li key={movie.id}>\n                <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\n              </li>\n            );\n          })}\n      </ul>\n    </div>\n  );\n}\n\nexport default Home;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '442842e0e9a8a18a8e446b3595831199';\n\nexport const requestTrendingMovies = async () => {\n  const searchParams = {\n    params: {\n      api_key: API_KEY,\n    },\n  };\n\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/movie/day`,\n    searchParams\n  );\n\n  return data.results;\n};\n\nexport const requestMovies = async query => {\n  const searchParams = {\n    params: {\n      api_key: API_KEY,\n      query: query,\n    },\n  };\n\n  const { data } = await axios.get(`${BASE_URL}/search/movie`, searchParams);\n\n  return data.results;\n};\n\nexport const requestMovieById = async movieId => {\n  const searchParams = {\n    params: {\n      api_key: API_KEY,\n    },\n  };\n\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}`,\n    searchParams\n  );\n\n  return data;\n};\n\nexport const requestCastById = async movieId => {\n  const searchParams = {\n    params: {\n      api_key: API_KEY,\n    },\n  };\n\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits`,\n    searchParams\n  );\n\n  return data.cast;\n};\n\nexport const requestReviewsById = async movieId => {\n  const searchParams = {\n    params: {\n      api_key: API_KEY,\n    },\n  };\n\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews`,\n    searchParams\n  );\n\n  return data.results;\n};\n"],"names":["useState","trendingMovies","setTrendingMovies","isLoading","setIsLoading","error","setError","useEffect","fetchTrendingMovies","requestTrendingMovies","fetchedTrendingMovies","message","length","map","movie","to","id","title","BASE_URL","API_KEY","searchParams","params","api_key","axios","data","results","requestMovies","query","requestMovieById","movieId","requestCastById","cast","requestReviewsById"],"sourceRoot":""}